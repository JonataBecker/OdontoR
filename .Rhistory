source("prepara_dataset.r")
source("functions.r")
library(class)
library(rpart)
library(rpart.plot)
source("prepara_dataset.r")
setwd("~/Documents/R/OdontoR")
data = read.csv2("../dados_odntologicos_caxias_sul.csv", fileEncoding="ISO-8859-1")
data <- data[c(0:3006), ]
source("prepara_dataset.r")
source("functions.r")
pct_treinamento = 0.8
atributos = c("sexo.n", "idade", "tipo.invervencao.n", "motivo.n", "novo.restauracao.n", "numero.dente.n", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.palatal.n", "superficie.vestibular.n", "superficie.oclusal.incisal.n", "superficie.mesial.n", "superficie.distal.n")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("atributos numericos", pct_treinamento, atributos, classe, metodo_na))
all_results = data.frame()
summary(data$falha)
pct_treinamento = 0.8
atributos = c("sexo.n", "idade", "tipo.invervencao.n", "motivo.n", "novo.restauracao.n", "numero.dente.n", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.palatal.n", "superficie.vestibular.n", "superficie.oclusal.incisal.n", "superficie.mesial.n", "superficie.distal.n")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("atributos numericos", pct_treinamento, atributos, classe, metodo_na))
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente", "arcada", "lado", "tipo.restauracao", "material.restauracao", "superficie.lingual.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.incisal.fc", "superficie.mesial.fc", "superficie.distal.fc")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
library(class)
library(rpart)
library(rpart.plot)
source("prepara_dataset.r")
source("functions.r")
all_results = data.frame()
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente", "arcada", "lado", "tipo.restauracao", "material.restauracao", "superficie.lingual.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.incisal.fc", "superficie.mesial.fc", "superficie.distal.fc")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente", "arcada", "lado", "tipo.restauracao", "material.restauracao", "superficie.lingual.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.incisal.fc", "superficie.mesial.fc", "superficie.distal.fc", "classe", "vitalidade")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
source("prepara_dataset.r")
source("functions.r")
source("prepara_dataset.r")
source("functions.r")
all_results = data.frame()
summary(data$falha)
pct_treinamento = 0.8
atributos = c("sexo.n", "idade", "tipo.invervencao.n", "motivo.n", "novo.restauracao.n", "numero.dente.n", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.palatal.n", "superficie.vestibular.n", "superficie.oclusal.incisal.n", "superficie.mesial.n", "superficie.distal.n")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("atributos numericos", pct_treinamento, atributos, classe, metodo_na))
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente", "arcada", "lado", "tipo.restauracao", "material.restauracao", "superficie.lingual.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.incisal.fc", "superficie.mesial.fc", "superficie.distal.fc")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
source("prepara_dataset.r")
source("functions.r")
all_results = data.frame()
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente", "arcada", "lado", "tipo.restauracao", "material.restauracao", "superficie.lingual.fc", "superficie.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.fc", "superficie.mesial.fc", "superficie.distal.fc")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente",  "lado", "tipo.restauracao", "material.restauracao", "superficie.lingual.fc", "superficie.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.fc", "superficie.mesial.fc", "superficie.distal.fc")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
pct_treinamento = 0.7
atributos = c("sexo", "idade.ag", "classe", "vitalidade", "tipo.invervencao", "novo.restauracao", "numero.dente", "tipo.dente", "tipo.restauracao", "superficie.lingual.fc", "superficie.palatal.fc", "superficie.vestibular.fc", "superficie.oclusal.fc", "superficie.mesial.fc", "superficie.distal.fc")
classe = "falha"
metodo_na = "complete.cases"
all_results = rbind(all_results, test_rpart("Sem motivo - fatory - Idade com agrupamento", pct_treinamento, atributos, classe, metodo_na))
all_results
source("prepara_dataset.r")
columns = c("falha.n", "sexo.n","tipo.invervencao.n","novo.restauracao.n")
columns = match(columns, names(data))
columns = columns[!is.na(columns)]
columns = as.numeric(columns)
processed = data[, columns]
processed = processed[complete.cases(processed),]
t = nrow(processed)
n = t * 0.8
processed$status = as.factor(processed$status)
nn <- neuralnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
library(class)
library(rpart)
library(rpart.plot)
library(grid)
library(gridExtra)
library(neuralnet)
nn <- neuralnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
previsao <- compute(nn, processed[n:t,][,2:4])
previsao$net.result
length(previsao$net.result)
length(previsao$net.result)
previsao <- compute(nn, processed[n:t,][,2:4])
previsao$net.result
data$falha.n
previsao$net.result
data$falha.fa = as.factor(data$falha.n)
nn <- neuralnet(falha.fa~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
processed$falha.fa = as.factor(processed$falha.n)
nn <- neuralnet(falha.fa~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
nn <- neuralnet(falha~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
nn <- neuralnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
previsao <- compute(nn, processed[n:t,][,2:4])
predict(nn, processed[n:t,], "class")
nn <- nnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
install.packages("nnet")
nn <- nnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
library(nnet)
nn <- nnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
nn <- nnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], hidden=5)
nn <- nnet(falha.n~sexo.n+tipo.invervencao.n+novo.restauracao.n,
data=processed[1:n,], size=5)
predict(nn, processed[n:t,], "class")
nn
plot(nn)
predict(nn, processed[n:t,], "class")
predict(nn, processed[n:t,])
processed[1:n,2:4]
processed[1:n,1:1]
nn <- nnet(processed[1:n,2:4], processed[1:n,1:1], size=5)
nn
predict(nn, processed[n:t,2:4], "class")
predict(nn, processed[n:t,2:4], type="class")
ideal <- class.ind(processed$falha.n)
nn <- nnet(processed[1:n,2:4], ideal[1:n], size=5)
nn
predict(nn, processed[n:t,2:4], type="class")
predict(nn, processed[n:t,2:4], type="class")
ideal <- class.ind(processed$falha.fa)
nn <- nnet(processed[1:n,2:4], ideal[1:n], size=5)
predict(nn, processed[n:t,2:4], type="class")
source("prepara_dataset.r")
data$falha.fa = as.factor(data$falha.n);
columns = c("falha.fa", "sexo.n","tipo.invervencao.n","novo.restauracao.n")
columns = match(columns, names(data))
columns = columns[!is.na(columns)]
columns = as.numeric(columns)
processed = data[, columns]
processed = processed[complete.cases(processed),]
t = nrow(processed)
n = t * 0.8
processed
ideal <- class.ind(processed$falha.fa)
nn <- nnet(processed[1:n,2:4], ideal[1:n], size=5)
predict(nn, processed[n:t,2:4], type="class")
ideal <- class.ind(processed$falha.fa)
nn <- nnet(processed[1:n,2:4], processed$falha.fa[1:n], size=5)
predict(nn, processed[n:t,2:4], type="class")
nn
ideal <- class.ind(processed$falha.fa)
nn <- nnet(processed[1:n,2:4], ideal[1:n], size=5)
nn
processed
summary(processed)
nn <- nnet(processed[1:n,2:4], ideal[1:n], size=5, softmax = TRUE)
nn <- nnet(processed[1:n,2:4], ideal[1:n], size=10, softmax = TRUE)
processed[1:n,-1]
nn <- nnet(falaha.fa ~ ., data = processed[1:n,-1])
nn <- nnet(falha.fa ~ ., data = processed[1:n,-1])
nn <- nnet(falha.fa ~ ., data = processed[1:n,-1])
nn <- nnet(falha.fa ~ ., data = processed[1:n,])
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = )
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
nn
predict(nn, processed[n:t,2:4], type="class")
classe_estimada <- as.factor(classe_estimada)
classe_estimada <-predict(nn, processed[n:t,2:4], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
source("prepara_dataset.r")
data$falha.fa = as.factor(data$falha.n);
columns = c("falha.fa", "sexo.n", "idade", "tipo.invervencao.n", "novo.restauracao.n", "numero.dente", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.n", "superficie.palatal.n", "superficie.vestibular.n", "superficie.oclusal.n", "superficie.mesial.n", "superficie.distal.n", "vitalidade.n", "classe.n")
columns = match(columns, names(data))
columns = columns[!is.na(columns)]
columns = as.numeric(columns)
processed = data[, columns]
processed = processed[complete.cases(processed),]
t = nrow(processed)
n = t * 0.8
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
classe_estimada <-predict(nn, processed[n:t,2:4], type="class")
data$novo.restauracao.n
source("prepara_dataset.r")
data$falha.fa = as.factor(data$falha.n);
columns = c("falha.fa", "sexo.n", "idade", "tipo.invervencao.n", "numero.dente", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.n", "superficie.palatal.n", "superficie.vestibular.n", "superficie.oclusal.n", "superficie.mesial.n", "superficie.distal.n", "vitalidade.n", "classe.n")
columns = match(columns, names(data))
columns = columns[!is.na(columns)]
columns = as.numeric(columns)
processed = data[, columns]
processed = processed[complete.cases(processed),]
t = nrow(processed)
n = t * 0.8
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
classe_estimada <-predict(nn, processed[n:t,2:4], type="class")
source("prepara_dataset.r")
data$falha.fa = as.factor(data$falha.n);
columns = c("falha.fa", "sexo.n", "idade", "tipo.invervencao.n", "novo.restauracao.n", "numero.dente", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.n", "superficie.palatal.n", "superficie.vestibular.n", "superficie.oclusal.n", "superficie.mesial.n", "superficie.distal.n", "vitalidade.n", "classe.n")
columns = match(columns, names(data))
columns = columns[!is.na(columns)]
columns = as.numeric(columns)
processed = data[, columns]
processed = processed[complete.cases(processed),]
t = nrow(processed)
n = t * 0.8
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
source("functions.r")
source("prepara_dataset.r")
source("functions.r")
data$falha.fa = as.factor(data$falha.n);
columns = c("falha.fa", "sexo.n", "idade", "tipo.invervencao.n", "novo.restauracao.n", "numero.dente", "tipo.dente.n", "arcada.n", "lado.n", "tipo.restauracao.n", "material.restauracao.n", "superficie.lingual.n", "superficie.palatal.n", "superficie.vestibular.n", "superficie.oclusal.n", "superficie.mesial.n", "superficie.distal.n", "vitalidade.n", "classe.n")
columns = match(columns, names(data))
columns = columns[!is.na(columns)]
columns = as.numeric(columns)
processed = data[, columns]
processed = processed[complete.cases(processed),]
t = nrow(processed)
n = t * 0.8
processed = normaliza_atributos_numericos(processed)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 10)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 2)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 1)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 1)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 3)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 2)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 2)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 5)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 3)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
nn <- nnet(falha.fa ~ ., data = processed[1:n,], size = 2)
classe_estimada <-predict(nn, processed[n:t,-1], type="class")
classe_estimada <- as.factor(classe_estimada)
sum(processed[n:t,]$falha.fa == classe_estimada) / (t - n)
